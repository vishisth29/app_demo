"""create tables

Revision ID: 2d2047b36598
Revises: 
Create Date: 2020-02-18 02:37:35.178706

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '2d2047b36598'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('group',
    sa.Column('group_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=30), nullable=False),
    sa.PrimaryKeyConstraint('group_id')
    )
    op.create_table('user',
    sa.Column('user_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=20), nullable=False),
    sa.Column('pw_hash', sa.String(length=64), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('expense',
    sa.Column('expense_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(length=50), nullable=True),
    sa.Column('total', sa.REAL(), nullable=False),
    sa.Column('payer', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('split', sa.Enum('EQUAL', 'EXACT', 'PERCENTAGE', name='splittype'), nullable=False),
    sa.Column('timestamp', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['group.group_id'], ),
    sa.ForeignKeyConstraint(['payer'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('expense_id')
    )
    op.create_table('group_membership',
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['group.group_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('group_id', 'user_id')
    )
    op.create_table('payment',
    sa.Column('payment_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('note', sa.String(length=50), nullable=True),
    sa.Column('amount', sa.REAL(), nullable=False),
    sa.Column('payer', sa.Integer(), nullable=False),
    sa.Column('payee', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['group.group_id'], ),
    sa.ForeignKeyConstraint(['payee'], ['user.user_id'], ),
    sa.ForeignKeyConstraint(['payer'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('payment_id')
    )
    op.create_table('expense_share',
    sa.Column('expense_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('share', sa.REAL(), nullable=False),
    sa.ForeignKeyConstraint(['expense_id'], ['expense.expense_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('expense_id', 'user_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('expense_share')
    op.drop_table('payment')
    op.drop_table('group_membership')
    op.drop_table('expense')
    op.drop_table('user')
    op.drop_table('group')
    # ### end Alembic commands ###
